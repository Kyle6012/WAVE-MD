const axios = require('axios');
const cheerio = require('cheerio');
const urlModule = require('url');

async function scrapeWebsite(url) {
    try {
        const { data } = await axios.get(url);
        const $ = cheerio.load(data);
        
        // Extract the title
        const title = $('title').text();

        // Extract images
        const images = [];
        $('img').each((index, element) => {
            images.push($(element).attr('src'));
        });

        // Extract videos
        const videos = [];
        $('video').each((index, element) => {
            videos.push($(element).attr('src'));
        });

        // Extract audios
        const audios = [];
        $('audio').each((index, element) => {
            audios.push($(element).attr('src'));
        });

        // Extract text content
        const text = $('body').text().trim();

        // Extract internal page links
        const pages = [];
        $('a').each((index, element) => {
            const href = $(element).attr('href');
            if (href && href.startsWith('/')) {
                const absoluteUrl = urlModule.resolve(url, href);
                pages.push(absoluteUrl);
            }
        });

        // Extract downloadable files (e.g., PDF, DOCX)
        const downloadables = [];
        $('a').each((index, element) => {
            const href = $(element).attr('href');
            if (href && (href.endsWith('.pdf') || href.endsWith('.docx') || href.endsWith('.zip') || href.endsWith('.rar'))) {
                const absoluteUrl = urlModule.resolve(url, href);
                downloadables.push(absoluteUrl);
            }
        });

        return {
            title,
            images,
            videos,
            audios,
            text,
            pages,
            downloadables
        };
    } catch (error) {
        console.error('Error scraping website:', error);
        return null;
    }
}

module.exports = scrapeWebsite;
