const helpMessages = {
    nmap: `Usage: .nmap <target>:<port-range>\nExample: .nmap 192.168.1.1:22-80\nDescription: Performs a port scan on the specified target and port range.`,
    sqlinject: `Usage: .sqlinject <url> <username> <password>\nExample: .sqlinject http://example.com/login admin admin\nDescription: Performs SQL Injection tests on the given URL with optional username and password for authentication.`,
    csrf: `Usage: .csrf <url> <method> <param1=value1,param2=value2,...> [username=username&password=password]\nExample: .csrf http://example.com/form POST param1=value1,param2=value2 admin=admin&password=admin\nDescription: Tests for CSRF vulnerabilities by sending crafted requests with and without CSRF tokens.`,
    cmdinject: `Usage: .cmdinjection <url> <param1=value1,param2=value2,...>\nExample: .cmdinjection http://example.com/endpoint param1=value1,param2=value2\nDescription: Tests for Command Injection vulnerabilities by sending payloads in the specified parameters.`,
    authbypass: `Usage: .authbypass <url> <username> <password> <param1=value1,param2=value2,...>\nExample: .authbypass http://example.com/login admin admin param1=value1,param2=value2\nDescription: Tests for Authentication Bypass vulnerabilities using default credentials and user-provided credentials.`,
    exec: `Usage: .exec <command>\nExample: .exec m.reply("Hello World!")\nDescription: Executes arbitrary JavaScript code provided in the command.`,
    portscan: `Usage: .portscan <target>:<port-range>\nExample .portscan 127.0.0.1 1-1000\n\nDescription: Perform portscanning on a specified target and port range for open ports.`,
    subdomain: `Usage: .subdomain <website link>\nExample: .subdomain mywebsite.com\n\nDescription: Scan for subdomains of a website.`,
    dnslookup: `Usage: .dnslookup <web url>\nExample: .dnslookup google.com\n\nDescription: Performs  dns lookup of any website.`,
    nslookup: `Usage: .nslookup <web url>\nExample: .nslookup google.com\n\nDescription: Perform a lookup on A records and AAAA records to get both the IPV4 and IPV6 addresses.`,
    ipinfo: `Usage: .ipinfo <ip-address>\nExample: .ipinfo 87.233.23.1\n\nDescription: Gives information of an ip address.`,
    headeranalyze: `Usage: .headeranalyze <url> \ .headers</url>\nExample: .headeranalyze https://meet.google.com/\n\nDescription: Analyzes headers from a website's response.`,
    httpmethod: `Usage: .httpmethod <url>\nExample: .httpmethod https://meet.google.com/\n\nDescription: Test the http methods on a website such a PUT, DELETE, PATCH.`,
    inclusion: `Usage: .inclusion <url> <param1=value1,param2=value2,...> [username=username&password=password]\nExample: .inclusion https://mywebsite.com/webmin id=1 username=admin&password=123456\n\nDescription: Test for LFI/RFI`,
    ddos: `Usage: .ddos on <target> <port> [http|https|tcp]\nExample: .ddos on 192.168.1.23 80 tcp\n\nDescription: Performs a DDOS attack.`,


};

const getHelpMessage = (command) => {
    return helpMessages[command] || `No help available for command: ${command}`;
};

module.exports = {
    getHelpMessage,
};